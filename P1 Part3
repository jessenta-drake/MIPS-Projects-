#.globl main
.globl PrintName
.data
name: .asciiz "Jessenta"
.text
#main:
   
PrintName:# Your PrintName routine goes here	
    addi $v0, $0, 4
    lui $a0, 0x1000
    add $0, $0, $0
    syscall

    jr $ra
    add $0, $0,$0timberlake {~} > cat project_1_part_2.s
#.globl main
.globl GetCode

.data 0x10000000
prompt: .asciiz "Enter a 7 bit code consisting of ones and zeros"
#a0:0x10000040
#a1:100
.text

#main:
    #lui $a0, 0x1000
    #addi $a1, $a0, 0x0040
    #addi $a1, $a0, $a0

    #jal GetCode
    #add $0, $0,$0

    #addi $v0, $0, 0xA
    #syscall

#lui $a1, 0x1000
#addi $a1, $a1, 0xC

GetCode:	# Your GetCode routine goes here

    addi $v0, $0, 4
	lui $a0, 0x1000        
	syscall

 #read string a0,a1
    add $a0, $a1, $0
    addi $a1, $0,100
    addi $v0, $0, 8
    syscall

    sb $0,7($a0) # overwriting enter key or use beq

    jr $ra
    add $0, $0,$0timberlake {~} > cat project_1_part_3.s
#.globl main

.globl GetOnes 

#
.data 0x1000000C 

#
.text
#take out
#main:

    #lui $a1, 0x1000
    #addi $a1, $a1, 0xC


    #jal GetOnes
    #add $0, $0, $0

#exit:
    #addi $v0, $0, 0xA
    #add $0, $0, $0
#take out
GetOnes:	# Your GetOnes routine goes here

    add $s0, $0, $0
    #where to accept pointer 

    addi $t0, $0, 0x31
    #addi $t5, $0, 0x0

    lb $t4, ($a1)
    add $0, $0,$0
    beq $t4, $t0,counter
    add $0, $0,$0 

loop: 
    addi $a1, $a1, 1
    lb $t4, ($a1)
    add $0, $0,$0
    #null terminator
    beq $t4,$0,done
    add $0, $0,$0
    #bne $t4, $t0,nocount
    #add $0, $0,$0
    beq $t4, $t0,counter 
    add $0, $0,$0
    j loop
    add $0, $0,$0

counter: 
    addi $s0, $s0, 1
    j loop  
    add $0, $0,$0

done: 
    add $v0, $0,$s0
    jr $ra
    add $0, $0,$0
